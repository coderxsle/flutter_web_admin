# Docker Compose 时区配置示例
# 这个文件展示了不同的时区设置方法，您可以根据需要选择使用

version: '3.8'

services:
  # 方法一：使用环境变量设置时区（推荐）
  postgres_env:
    image: postgres:16.3
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: flutter_web_admin
      POSTGRES_PASSWORD: password
      # 设置容器时区
      TZ: Asia/Shanghai
      # PostgreSQL 时区设置
      PGTZ: Asia/Shanghai
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # 方法二：使用命令行参数设置时区
  postgres_cmd:
    image: postgres:16.3
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: flutter_web_admin
      POSTGRES_PASSWORD: password
    command: >
      postgres
      -c timezone=Asia/Shanghai
      -c log_timezone=Asia/Shanghai
    volumes:
      - postgres_data2:/var/lib/postgresql/data

  # 方法三：使用自定义初始化脚本
  postgres_init:
    image: postgres:16.3
    ports:
      - '5434:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: flutter_web_admin
      POSTGRES_PASSWORD: password
      TZ: Asia/Shanghai
    volumes:
      - postgres_data3:/var/lib/postgresql/data
      - ./init-timezone.sql:/docker-entrypoint-initdb.d/init-timezone.sql

  # 方法四：使用自定义 Dockerfile
  postgres_custom:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    ports:
      - '5435:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: flutter_web_admin
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data4:/var/lib/postgresql/data

  # Redis 时区设置
  redis:
    image: redis:6.2.6
    ports:
      - '6379:6379'
    environment:
      TZ: Asia/Shanghai
    command: redis-server --requirepass password

  # 应用程序时区设置
  app:
    build: .
    ports:
      - '8080:8080'
    environment:
      TZ: Asia/Shanghai
      # 数据库连接配置
      DB_HOST: postgres_env
      DB_NAME: flutter_web_admin
      DB_USER: postgres
      DB_PASSWORD: password
      # 时区相关配置
      APP_TIMEZONE: Asia/Shanghai
    depends_on:
      - postgres_env
      - redis

volumes:
  postgres_data:
  postgres_data2:
  postgres_data3:
  postgres_data4:




