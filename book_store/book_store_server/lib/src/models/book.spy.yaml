# DROP TABLE IF EXISTS `book`;
# CREATE TABLE `book` (
#   `id` bigint NOT NULL COMMENT '主键',
#   `isbn` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '书号',
#   `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '书名',
#   `image` varchar(255) CHARACTER SET armscii8 COLLATE armscii8_general_ci NOT NULL COMMENT '图片',
#   `author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '作者',
#   `category` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '图书分类',
#   `status` int NOT NULL DEFAULT '0' COMMENT '状态',
#   `publisher` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '出版社',
#   `purchase_price` decimal(10,2) NOT NULL DEFAULT '0.00' COMMENT '进价',
#   `sale_price` decimal(10,2) NOT NULL DEFAULT '0.00' COMMENT '售价',
#   `stock` int NOT NULL DEFAULT '0' COMMENT '库存',
#   `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
#   `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
#   `category_id` bigint NOT NULL DEFAULT '0' COMMENT '类别id',
#   PRIMARY KEY (`id`)
# ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='图书表';



# class：指定要生成的类的名称，在本例中为Note。
# fields：此关键字表示Note类的字段定义的开始。
# text：在 Note 类中定义一个 String 类型的文本字段，在这个最小示例中我们只有一个字段，但您可以根据需要添加任意数量的字段。
# 图书信息模型
### 图书信息模型，用于存储图书的基本信息
class: Book
table: book
fields:
  ### 图书的ISBN编号，用于唯一标识一本书
  isbn: String?

  ### 图书的标题/书名（必填）
  title: String

  ### 图书封面的图片URL地址
  image: String?

  ### 图书的作者姓名
  author: String?

  ### 图书所属的分类名称
  category: String?

  ### 图书分类的ID，用于关联分类表
  categoryId: int?

  ### 图书状态：0-下架，1-上架
  status: int?

  ### 出版社名称
  publisher: String?

  ### 图书的进货价格
  purchasePrice: double?

  ### 图书的销售价格
  salePrice: double?

  ### 图书当前库存数量
  stock: int?

  ### 记录创建时间
  createTime: DateTime?

  ### 记录最后更新时间
  updatedTime: DateTime?
  

